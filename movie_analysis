{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "7410c4d2",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas\n",
    "import neattext as nt\n",
    "import numpy as np\n",
    "import transformers\n",
    "import pyarrow as pa\n",
    "import torch\n",
    "import math\n",
    "\n",
    "from torch.nn.utils import clip_grad_norm_\n",
    "from tqdm.notebook import tqdm\n",
    "from sklearn.metrics import classification_report\n",
    "from sklearn.model_selection import train_test_split\n",
    "from transformers import AutoModelForSequenceClassification\n",
    "from transformers import TrainingArguments\n",
    "from transformers import Trainer\n",
    "from datasets import Dataset\n",
    "from datasets import load_dataset\n",
    "from transformers import AutoTokenizer\n",
    "from torch.utils.data import TensorDataset, DataLoader, RandomSampler, SequentialSampler\n",
    "from torch.optim import AdamW\n",
    "from transformers import get_linear_schedule_with_warmup\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "3c26f84b",
   "metadata": {},
   "outputs": [],
   "source": [
    "tokenizer = AutoTokenizer.from_pretrained('bert-base-uncased', do_lower_case=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "0df8f676",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Keeping hashtags as they can be important for the emotion recognition.\n",
    "\n",
    "def preprocess_data(text):\n",
    "    text = text.replace(\"[NAME]\", \"\")\n",
    "    text = text.replace(\"[RELIGION]\", \"\")\n",
    "    docx = nt.TextFrame(text=text)\n",
    "    text = docx.remove_urls()\n",
    "    text = docx.remove_dates()\n",
    "    text = docx.remove_numbers()\n",
    "    text = docx.remove_html_tags()\n",
    "    text = docx.remove_emojis()\n",
    "    text = docx.remove_special_characters()\n",
    "    return docx.text"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "90ad1851",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Because BERT is a language model that utilises the structure of the sentence from both directions to connect every output element to every \n",
    "# input element, and dynamically adjust weightings depending on this connection (this process is called attention), my hypothesis is that \n",
    "# the lighter pre-processing will do better. This is because stopwords and other grammatical features of sentences may have a part to play \n",
    "# in helping the modelâ€™s attention.\n",
    "\n",
    "def process_data(rows):\n",
    "    processed_rows = tokenizer.batch_encode_plus(\n",
    "        rows,\n",
    "        add_special_tokens=True,\n",
    "        max_length = 128,\n",
    "        padding = 'max_length',\n",
    "        return_attention_mask=True,\n",
    "        truncation=True,\n",
    "        return_tensors='pt'\n",
    "    )\n",
    "\n",
    "    input_ids = processed_rows['input_ids']\n",
    "    attention_masks = processed_rows['attention_mask']\n",
    "    return input_ids, attention_masks"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "0bccc7a1",
   "metadata": {},
   "outputs": [],
   "source": [
    "emotions_dictionary = {'sadness': 0, 'joy': 1, 'anger': 2, 'fear': 3, 'surprise': 4} \n",
    "emotions_dictionary_inverted = {0: 'sadness', 1: 'joy', 2: 'anger', 3: 'fear', 4: 'surprise'}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "16325abe",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "BertForSequenceClassification(\n",
       "  (bert): BertModel(\n",
       "    (embeddings): BertEmbeddings(\n",
       "      (word_embeddings): Embedding(30522, 768, padding_idx=0)\n",
       "      (position_embeddings): Embedding(512, 768)\n",
       "      (token_type_embeddings): Embedding(2, 768)\n",
       "      (LayerNorm): LayerNorm((768,), eps=1e-12, elementwise_affine=True)\n",
       "      (dropout): Dropout(p=0.1, inplace=False)\n",
       "    )\n",
       "    (encoder): BertEncoder(\n",
       "      (layer): ModuleList(\n",
       "        (0-11): 12 x BertLayer(\n",
       "          (attention): BertAttention(\n",
       "            (self): BertSelfAttention(\n",
       "              (query): Linear(in_features=768, out_features=768, bias=True)\n",
       "              (key): Linear(in_features=768, out_features=768, bias=True)\n",
       "              (value): Linear(in_features=768, out_features=768, bias=True)\n",
       "              (dropout): Dropout(p=0.1, inplace=False)\n",
       "            )\n",
       "            (output): BertSelfOutput(\n",
       "              (dense): Linear(in_features=768, out_features=768, bias=True)\n",
       "              (LayerNorm): LayerNorm((768,), eps=1e-12, elementwise_affine=True)\n",
       "              (dropout): Dropout(p=0.1, inplace=False)\n",
       "            )\n",
       "          )\n",
       "          (intermediate): BertIntermediate(\n",
       "            (dense): Linear(in_features=768, out_features=3072, bias=True)\n",
       "            (intermediate_act_fn): GELUActivation()\n",
       "          )\n",
       "          (output): BertOutput(\n",
       "            (dense): Linear(in_features=3072, out_features=768, bias=True)\n",
       "            (LayerNorm): LayerNorm((768,), eps=1e-12, elementwise_affine=True)\n",
       "            (dropout): Dropout(p=0.1, inplace=False)\n",
       "          )\n",
       "        )\n",
       "      )\n",
       "    )\n",
       "    (pooler): BertPooler(\n",
       "      (dense): Linear(in_features=768, out_features=768, bias=True)\n",
       "      (activation): Tanh()\n",
       "    )\n",
       "  )\n",
       "  (dropout): Dropout(p=0.1, inplace=False)\n",
       "  (classifier): Linear(in_features=768, out_features=5, bias=True)\n",
       ")"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from transformers import AutoModelForSequenceClassification\n",
    "\n",
    "new_model = AutoModelForSequenceClassification.from_pretrained('model')\n",
    "device = torch.device('cuda' if torch.cuda.is_available() else 'cpu')\n",
    "new_model.to(device)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "51467b53",
   "metadata": {},
   "outputs": [],
   "source": [
    "from collections import defaultdict\n",
    "\n",
    "conversations = []\n",
    "\n",
    "def clean_text(text):\n",
    "  text = text.replace(\"\\ \", '')\n",
    "  text = text.replace('-', ' ')\n",
    "  text = text.replace(' / ', '')\n",
    "  return text\n",
    "\n",
    "\n",
    "with open('conversations.txt', 'r') as file:\n",
    "  for line in file.readlines():\n",
    "    line = line.split('+')\n",
    "    line = [x for x in line if x != ' \\n']\n",
    "    \n",
    "    conversation_data = []\n",
    "    \n",
    "    for index in range(0, len(line)-1, 2):\n",
    "      conversation_data.append((line[index], clean_text(line[index+1])))  \n",
    "    conversations.append(conversation_data)\n",
    "  file.close()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "4a08e3a8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[('WILL ',\n",
       "  '  Did you buy all these books retail, or do you send away for like a \"shrink kit\" that comes with all these volumes included? '),\n",
       " (' SEAN ', '  Have you read all these books, Will? '),\n",
       " (' WILL ', '  Probably not. '),\n",
       " (' SEAN ', '  How about the ones on that shelf? ')]"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "conversations[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "7aaca03c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "  Did you buy all these books retail, or do you send away for like a \"shrink kit\" that comes with all these volumes included? \n",
      "tensor(0.8669, grad_fn=<MaxBackward1>)\n",
      "  Have you read all these books, Will? \n",
      "tensor(0.8717, grad_fn=<MaxBackward1>)\n",
      "  Probably not. \n",
      "tensor(0.6498, grad_fn=<MaxBackward1>)\n",
      "  How about the ones on that shelf? \n",
      "tensor(0.8988, grad_fn=<MaxBackward1>)\n",
      "  Yeah, I read those. \n",
      "tensor(0.7620, grad_fn=<MaxBackward1>)\n",
      "  What did you think? \n",
      "tensor(0.6828, grad_fn=<MaxBackward1>)\n",
      "  I'm not here for a fuckin' book report. They're your books, why don't you read 'em? \n",
      "tensor(0.9350, grad_fn=<MaxBackward1>)\n",
      "  I did. \n",
      "tensor(0.4206, grad_fn=<MaxBackward1>)\n",
      "  That must have taken you a long time. \n",
      "tensor(0.3861, grad_fn=<MaxBackward1>)\n",
      "  Yeah, it did take me a long time. \n",
      "tensor(0.3144, grad_fn=<MaxBackward1>)\n",
      "  \"A History of the United States, Volume I.\" If you want to read a real history book, read Howard Zinn's \"A People's History of the United States.\" That book will knock you on your ass. \n",
      "tensor(0.8309, grad_fn=<MaxBackward1>)\n",
      "  How about Noam Chomsky's \"Manufacturing Consent?\" \n",
      "tensor(0.6648, grad_fn=<MaxBackward1>)\n",
      "  You people baffle me. You spend all this money on beautiful, fancy books   and they're the wrong fuckin' books. \n",
      "tensor(0.8865, grad_fn=<MaxBackward1>)\n",
      "  You think so? \n",
      "tensor(0.8025, grad_fn=<MaxBackward1>)\n",
      "  Whatever blows your hair back. \n",
      "tensor(0.7308, grad_fn=<MaxBackward1>)\n",
      "  Guy your age shouldn't smoke so much. Stunt your growth. \n",
      "tensor(0.6745, grad_fn=<MaxBackward1>)\n",
      "  You're right. It really gets in the way of my jazzercizing. \n",
      "tensor(0.4291, grad_fn=<MaxBackward1>)\n",
      "  Yes, I do. \n",
      "tensor(0.5555, grad_fn=<MaxBackward1>)\n",
      "  Nautilus? \n",
      "tensor(0.7299, grad_fn=<MaxBackward1>)\n",
      "  Free weights. WILL Oh yeah? Me too. What do you bench? \n",
      "tensor(0.7373, grad_fn=<MaxBackward1>)\n",
      "  285. \n",
      "tensor(0.4755, grad_fn=<MaxBackward1>)\n",
      "  Oh. \n",
      "tensor(0.9282, grad_fn=<MaxBackward1>)\n",
      "  Yeah. Do you paint? \n",
      "tensor(0.5359, grad_fn=<MaxBackward1>)\n",
      "  No. \n",
      "tensor(0.3643, grad_fn=<MaxBackward1>)\n",
      "  Crayons? \n",
      "tensor(0.3959, grad_fn=<MaxBackward1>)\n",
      "  This is a real piece of shit. \n",
      "tensor(0.9067, grad_fn=<MaxBackward1>)\n",
      "  Tell me what you really think. \n",
      "tensor(0.5905, grad_fn=<MaxBackward1>)\n",
      "  Poor color composition, lousy use of space. But that shit doesn't really concern me. \n",
      "tensor(0.8255, grad_fn=<MaxBackward1>)\n",
      "  What does? \n",
      "tensor(0.5869, grad_fn=<MaxBackward1>)\n",
      "  The color here, see how dark it is? It's interesting. \n",
      "tensor(0.8037, grad_fn=<MaxBackward1>)\n",
      "  What is? \n",
      "tensor(0.5273, grad_fn=<MaxBackward1>)\n",
      "  I think you're one step away from cutting your ear off. \n",
      "tensor(0.6255, grad_fn=<MaxBackward1>)\n",
      "  Oh, \"Starry Night\" time, huh? \n",
      "tensor(0.8732, grad_fn=<MaxBackward1>)\n",
      "  You ever heard the saying, \"any port in a storm?\" \n",
      "tensor(0.7917, grad_fn=<MaxBackward1>)\n",
      "  Sure, how 'bout \"still waters run deep\"   \n",
      "tensor(0.6774, grad_fn=<MaxBackward1>)\n",
      "    Well, maybe that means you. \n",
      "tensor(0.5523, grad_fn=<MaxBackward1>)\n",
      "  Maybe what mea   \n",
      "tensor(0.7360, grad_fn=<MaxBackward1>)\n",
      "  Maybe you should be a patient and sit down. \n",
      "tensor(0.3153, grad_fn=<MaxBackward1>)\n",
      "  Maybe you married the wrong woman. \n",
      "tensor(0.8400, grad_fn=<MaxBackward1>)\n",
      "  Watch your mouth. \n",
      "tensor(0.7522, grad_fn=<MaxBackward1>)\n",
      "  That's it isn't it? You married the wrong woman. She leave you? Was she bangin' someone else? \n",
      "tensor(0.8437, grad_fn=<MaxBackward1>)\n",
      "  If you ever disrespect my wife again...I will end you. \n",
      "tensor(0.9415, grad_fn=<MaxBackward1>)\n",
      "  Time's up. \n",
      "tensor(0.4767, grad_fn=<MaxBackward1>)\n",
      "  So what's with this place? You have a swan fetish? Is this something you'd like to talk about? \n",
      "tensor(0.8064, grad_fn=<MaxBackward1>)\n",
      "  I was thinking about what you said to me the other day, about my painting. I stayed up half the night thinking about it and then something occured to me and I fell into a deep peaceful sleep and haven't thought about you since. You know what occurred to me? \n",
      "tensor(0.8911, grad_fn=<MaxBackward1>)\n",
      "  No. \n",
      "tensor(0.3643, grad_fn=<MaxBackward1>)\n",
      "  You're just a boy. You don't have the faintest idea what you're talking about. \n",
      "tensor(0.5497, grad_fn=<MaxBackward1>)\n",
      "  Why thank you. \n",
      "tensor(0.5082, grad_fn=<MaxBackward1>)\n",
      "  You've never been out of Boston. \n",
      "tensor(0.5725, grad_fn=<MaxBackward1>)\n",
      "  No. \n",
      "tensor(0.3643, grad_fn=<MaxBackward1>)\n",
      "  So if I asked you about art you could give me the skinny on every art book ever written...Michelangelo? You know a lot about him I bet. Life's work, criticisms, political aspirations. But you couldn't tell me what it smells like in the Sistine Chapel. You've never stood there and looked up at that beautiful ceiling. And if I asked you about women I'm sure you could give me a syllabus of your personal favorites, and maybe you've been laid a few times too. But you couldn't tell me how it feels to wake up next to a woman and be truly happy. If I asked you about war you could refer me to a bevy of fictional and non fictional material, but you've never been in one. You've never held your best friend's head in your lap and watched him draw his last breath, looking to you for help. And if I asked you about love I'd get a sonnet, but you've never looked at a woman and been truly vulnerable. Known that someone could kill you with a look. That someone could rescue you from grief. That God had put an angel on Earth just for you. And you wouldn't know how it felt to be her angel. To have the love be there for her forever. Through anything, through cancer. You wouldn't know about sleeping sitting up in a hospital room for two months holding her hand and not leaving because the doctors could see in your eyes that the term \"visiting hours\" didn't apply to you. And you wouldn't know about real loss, because that only occurs when you lose something you love more than yourself, and you've never dared to love anything that much. I look at you and I don't see an intelligent confident man, I don't see a peer, and I don't see my equal. I see a boy. Nobody could possibly understand you, right Will? Yet you presume to know so much about me because of a painting you saw. You must know everything about me. You're an orphan, right? \n",
      "tensor(0.9171, grad_fn=<MaxBackward1>)\n",
      "  You know, I was on this plane once. And I'm sittin' there and the captain comes on and is like \"we'll be cruising at 35,000 feet,\" and does his thing, then he puts the mike down but forgets to turn it off. Then he says \"man, all I want right now is a blow job and a cup of coffee.\" So the stewardess goes runnin' up towards the cock pit to tell him the mike's still on, and this guy in the back of the plane goes \"don't forget the coffee!\" \n",
      "tensor(0.4908, grad_fn=<MaxBackward1>)\n",
      "  You've never been on a plane. \n",
      "tensor(0.7073, grad_fn=<MaxBackward1>)\n",
      "  I know, but the joke's better if I tell it in the first person. \n",
      "tensor(0.8050, grad_fn=<MaxBackward1>)\n",
      "  Yeah? You got a lady now? \n",
      "tensor(0.5975, grad_fn=<MaxBackward1>)\n",
      "  Yeah, I went on a date last week. \n",
      "tensor(0.5185, grad_fn=<MaxBackward1>)\n",
      "  How'd it go? \n",
      "tensor(0.8409, grad_fn=<MaxBackward1>)\n",
      "  Fine. \n",
      "tensor(0.3888, grad_fn=<MaxBackward1>)\n",
      "  Well, are you going out again? \n",
      "tensor(0.7162, grad_fn=<MaxBackward1>)\n",
      "  I don't know. \n",
      "tensor(0.6480, grad_fn=<MaxBackward1>)\n",
      "  Why not? \n",
      "tensor(0.7898, grad_fn=<MaxBackward1>)\n",
      "  Haven't called her. \n",
      "tensor(0.4597, grad_fn=<MaxBackward1>)\n",
      "  Jesus Christ, you are an amateur. \n",
      "tensor(0.4978, grad_fn=<MaxBackward1>)\n",
      "  I know what I'm doing. She's different from the other girls I met. We have a really good time. She's smart, beautiful, fun... \n",
      "tensor(0.9554, grad_fn=<MaxBackward1>)\n",
      "  So Christ, call her up. \n",
      "tensor(0.8349, grad_fn=<MaxBackward1>)\n",
      "  Why? So I can realize she's not so smart. That she's boring. You don't get it. Right now she's perfect, I don't want to ruin that. \n",
      "tensor(0.6658, grad_fn=<MaxBackward1>)\n",
      "  And right now you're perfect too. Maybe you don't want to ruin that. \n",
      "tensor(0.7131, grad_fn=<MaxBackward1>)\n",
      "  I teach this shit, I didn't say I knew how to do it. \n",
      "tensor(0.6621, grad_fn=<MaxBackward1>)\n",
      "  You ever think about gettin' remarried? \n",
      "tensor(0.7680, grad_fn=<MaxBackward1>)\n",
      "  My wife's dead. \n",
      "tensor(0.8970, grad_fn=<MaxBackward1>)\n",
      "  Hence, the word remarried. \n",
      "tensor(0.3232, grad_fn=<MaxBackward1>)\n",
      "  My wife's dead. \n",
      "tensor(0.8970, grad_fn=<MaxBackward1>)\n",
      "  Well I think that's a wonderful philosophy, Sean. That way you can go through the rest of your life without having to really know anyone. \n",
      "tensor(0.9116, grad_fn=<MaxBackward1>)\n",
      "  Really? How'd the date go? WILL Do you still counsel veterans?  I read your book last night. \n",
      "tensor(0.7278, grad_fn=<MaxBackward1>)\n",
      "  No, I don't. \n",
      "tensor(0.5343, grad_fn=<MaxBackward1>)\n",
      "  Why not? \n",
      "tensor(0.7898, grad_fn=<MaxBackward1>)\n",
      "  I gave that up when my wife got sick. \n",
      "tensor(0.9527, grad_fn=<MaxBackward1>)\n",
      "  Is that why you didn't write anything else? \n",
      "tensor(0.6309, grad_fn=<MaxBackward1>)\n",
      "  I didn't write anything else 'cause nobody, including most of my colleagues bothered to read the first one. \n",
      "tensor(0.7245, grad_fn=<MaxBackward1>)\n",
      "  Well, I've read you colleagues. Your book was good, Sean.  All those guys were in your platoon? \n",
      "tensor(0.8642, grad_fn=<MaxBackward1>)\n",
      "  Yeah. \n",
      "tensor(0.5645, grad_fn=<MaxBackward1>)\n",
      "  What happened to that guy from Kentucky? \n",
      "tensor(0.6062, grad_fn=<MaxBackward1>)\n",
      "  Lon? He got married. He has a kid. I kind of lost touch with him after Nancy got sick. \n",
      "tensor(0.9340, grad_fn=<MaxBackward1>)\n",
      "  Do you ever wonder what your life would be like if you never met your wife? \n",
      "tensor(0.9385, grad_fn=<MaxBackward1>)\n",
      "  What? Do I wonder if I'd be better off if I never met my wife? \n",
      "tensor(0.9357, grad_fn=<MaxBackward1>)\n",
      "  You don't regret meetin' your wife? \n",
      "tensor(0.5739, grad_fn=<MaxBackward1>)\n",
      "  Why? Because of the pain I feel now? I have regrets Will, but I don't regret a singel day I spent with her. \n",
      "tensor(0.8773, grad_fn=<MaxBackward1>)\n",
      "  When did you know she was the one? \n",
      "tensor(0.7849, grad_fn=<MaxBackward1>)\n",
      "  October 21, 1975. Game six of the World Series. Biggest game in Red Sox history, Me and my friends slept out on the sidewalk all night to get tickets. We were sitting in a bar waiting for the game to start and in walks this girl. What a game that was. Tie game in the bottom of the tenth inning, in steps Carlton Fisk, hit a long fly ball down the left field line. Thirty five thousand fans on their feet, screamin' at the ball to stay fair. Fisk is runnin' up the baseline, wavin' at the ball like a madman. It hits the foul pole, home run. Thirty five thousand people went crazy. And I wasn't one of them. \n",
      "tensor(0.3522, grad_fn=<MaxBackward1>)\n",
      "  Where were you? \n",
      "tensor(0.4326, grad_fn=<MaxBackward1>)\n",
      "  I was havin' a drink with my future wife. \n",
      "tensor(0.8173, grad_fn=<MaxBackward1>)\n",
      "  You missed Pudge Fisk's homerun to have a drink with a woman you had never met? \n",
      "tensor(0.8264, grad_fn=<MaxBackward1>)\n",
      "  That's right. \n",
      "tensor(0.7597, grad_fn=<MaxBackward1>)\n",
      "  So wait a minute. The Red Sox haven't won a World Series since nineteen eighteen, you slept out for tickets, games gonna start in twenty minutes, in walks a girl you never seen before, and you give your ticket away? \n",
      "tensor(0.8226, grad_fn=<MaxBackward1>)\n",
      "  You should have seen this girl. She lit up the room. \n",
      "tensor(0.6820, grad_fn=<MaxBackward1>)\n",
      "  I don't care if Helen of Troy walked into that bar! That's game six of the World Series! \n",
      "tensor(0.9138, grad_fn=<MaxBackward1>)\n",
      "  I just slid my ticket across the table and said \"sorry fellas, I gotta go see about a girl.\" \n",
      "tensor(0.9559, grad_fn=<MaxBackward1>)\n",
      "  \"I gotta go see about a girl\"? What did they say? \n",
      "tensor(0.4921, grad_fn=<MaxBackward1>)\n",
      "  They could see that I meant it. \n",
      "tensor(0.8789, grad_fn=<MaxBackward1>)\n",
      "  You're kiddin' me. \n",
      "tensor(0.7004, grad_fn=<MaxBackward1>)\n",
      "  No Will, I'm not kiddin' you. If I had gone to see that game I'd be in here talkin' abouta girl I saw at a bar twenty years ago. And how I always regretted not goin' over there and talkin' to her. I don't regret the eighteen years we were married. I don't regret givin' up couseling for six years when she got sick. I don't regret being by her side for the last two years when things got real bad. And I sure as Hell don't regret missing that damn game. \n",
      "tensor(0.5336, grad_fn=<MaxBackward1>)\n",
      "  Would have been nice to catch that game though. \n",
      "tensor(0.9145, grad_fn=<MaxBackward1>)\n",
      "  Well hell, I didn't know Pudge was gonna hit the home run. \n",
      "tensor(0.7965, grad_fn=<MaxBackward1>)\n",
      "  So you might be working for Uncle Sam. \n",
      "tensor(0.8764, grad_fn=<MaxBackward1>)\n",
      "  I don't know. \n",
      "tensor(0.6480, grad_fn=<MaxBackward1>)\n",
      "  Gerry says the meeting went well. \n",
      "tensor(0.9372, grad_fn=<MaxBackward1>)\n",
      "  I guess. \n",
      "tensor(0.5625, grad_fn=<MaxBackward1>)\n",
      "  What did you think? \n",
      "tensor(0.6828, grad_fn=<MaxBackward1>)\n",
      "  What did I think? \n",
      "tensor(0.8241, grad_fn=<MaxBackward1>)\n",
      "  Do you think you're alone? \n",
      "tensor(0.4726, grad_fn=<MaxBackward1>)\n",
      "  What? \n",
      "tensor(0.7725, grad_fn=<MaxBackward1>)\n",
      "  Do you have a soul mate? \n",
      "tensor(0.8243, grad_fn=<MaxBackward1>)\n",
      "  Define that. \n",
      "tensor(0.4491, grad_fn=<MaxBackward1>)\n",
      "  Someone who challenges you in every way. Who takes you places, opens things up for you. A soul mate. \n",
      "tensor(0.6366, grad_fn=<MaxBackward1>)\n",
      "  Yeah. \n",
      "tensor(0.5645, grad_fn=<MaxBackward1>)\n",
      "  They're all dead. \n",
      "tensor(0.6911, grad_fn=<MaxBackward1>)\n",
      "  Not to me, they're not. \n",
      "tensor(0.6598, grad_fn=<MaxBackward1>)\n",
      "  But you can't give back to them, Will. \n",
      "tensor(0.6597, grad_fn=<MaxBackward1>)\n",
      "  Not without a heater and some serious smelling salts, no... \n",
      "tensor(0.5058, grad_fn=<MaxBackward1>)\n",
      "  That's what I'm saying, Will. You'll never have that kind of relationship in a world where you're afraid to take the first step because all you're seeing are the negative things that might happen ten miles down the road. \n",
      "tensor(0.9522, grad_fn=<MaxBackward1>)\n",
      "  Oh, what? You're going to take the professor's side on this? \n",
      "tensor(0.9227, grad_fn=<MaxBackward1>)\n",
      "  Don't give me you line of shit. \n",
      "tensor(0.9369, grad_fn=<MaxBackward1>)\n",
      "  I didn't want the job. \n",
      "tensor(0.8022, grad_fn=<MaxBackward1>)\n",
      "  It's not about that job. I'm not saying you should work for the government. But, you could do anything you want. And there are people who work their whole lives layin' brick so their kids have a chance at the kind of opportunity you have. What do you want to do? \n",
      "tensor(0.3875, grad_fn=<MaxBackward1>)\n",
      "  I didn't ask for this. \n",
      "tensor(0.8549, grad_fn=<MaxBackward1>)\n",
      "  Nobody gets what they ask for, Will. That's a cop out. \n",
      "tensor(0.7492, grad_fn=<MaxBackward1>)\n",
      "  Why is it a cop out? I don't see anythin' wrong with layin' brick, that's somebody's home I'm buildin'. Or fixin' somebody's car, somebody's gonna get to work the next day 'cause of me. There's honor in that. \n",
      "tensor(0.5347, grad_fn=<MaxBackward1>)\n",
      "  You're right, Will. Any man who takes a forty minute train ride so those college kids can come in in the morning and their floors will be clean and their trash cans will be empty is an honorable man. \n",
      "tensor(0.5598, grad_fn=<MaxBackward1>)\n",
      "  What? \n",
      "tensor(0.7725, grad_fn=<MaxBackward1>)\n",
      "  If you won't answer my questions, you're wasting my time. \n",
      "tensor(0.9307, grad_fn=<MaxBackward1>)\n",
      "  What? \n",
      "tensor(0.7725, grad_fn=<MaxBackward1>)\n",
      "  I been there. I played my hand. \n",
      "tensor(0.8664, grad_fn=<MaxBackward1>)\n",
      "  That's right. And you fuckin' lost! And some people would have the sack to lose a big hand like that and still come back and ante up again! \n",
      "tensor(0.8855, grad_fn=<MaxBackward1>)\n",
      "  Look at me. What do you want to do? \n",
      "tensor(0.5498, grad_fn=<MaxBackward1>)\n",
      "  Well, I'm here.  So, is that my problem? I'm afraid of being abandoned? That was easy. \n",
      "tensor(0.9157, grad_fn=<MaxBackward1>)\n",
      "  Look, a lot of that stuff goes back a long way.  And it's between me and him and it has nothing to do with you. \n",
      "tensor(0.7339, grad_fn=<MaxBackward1>)\n",
      "  Do you want to talk about it? \n",
      "tensor(0.3915, grad_fn=<MaxBackward1>)\n",
      "  Oh, this is your file. I have to send it back to the Judge with my evaluation. \n",
      "tensor(0.8181, grad_fn=<MaxBackward1>)\n",
      "  You're not going to fail me are you? \n",
      "tensor(0.5695, grad_fn=<MaxBackward1>)\n",
      "  You want to read it? \n",
      "tensor(0.5214, grad_fn=<MaxBackward1>)\n",
      "  No.  Have you had any experience with that? \n",
      "tensor(0.7094, grad_fn=<MaxBackward1>)\n",
      "  Twenty years of counselling you see a lot of   \n",
      "tensor(0.4800, grad_fn=<MaxBackward1>)\n",
      "    No, have you had any experience with that? \n",
      "tensor(0.7094, grad_fn=<MaxBackward1>)\n",
      "  Yes. \n",
      "tensor(0.6854, grad_fn=<MaxBackward1>)\n",
      "  It sure ain't good. \n",
      "tensor(0.6161, grad_fn=<MaxBackward1>)\n",
      "  Gotta go with the belt there... \n",
      "tensor(0.4448, grad_fn=<MaxBackward1>)\n",
      "  I used to go with the wrench. \n",
      "tensor(0.3365, grad_fn=<MaxBackward1>)\n",
      "  The wrench, why? \n",
      "tensor(0.5648, grad_fn=<MaxBackward1>)\n",
      "  Cause fuck him, that's why. \n",
      "tensor(0.9324, grad_fn=<MaxBackward1>)\n",
      "  Oh, I know. \n",
      "tensor(0.8810, grad_fn=<MaxBackward1>)\n",
      "  It's not your fault. \n",
      "tensor(0.5854, grad_fn=<MaxBackward1>)\n",
      "  I know. \n",
      "tensor(0.6257, grad_fn=<MaxBackward1>)\n",
      "  It's not your fault. \n",
      "tensor(0.5854, grad_fn=<MaxBackward1>)\n",
      "  I know. \n",
      "tensor(0.6257, grad_fn=<MaxBackward1>)\n",
      "  It's not your fault. \n",
      "tensor(0.5854, grad_fn=<MaxBackward1>)\n",
      "  I know. \n",
      "tensor(0.6257, grad_fn=<MaxBackward1>)\n",
      "  It's not your fault. \n",
      "tensor(0.5854, grad_fn=<MaxBackward1>)\n",
      "  Don't fuck with me. \n",
      "tensor(0.9438, grad_fn=<MaxBackward1>)\n",
      "  It's not your fault. \n",
      "tensor(0.5854, grad_fn=<MaxBackward1>)\n",
      "  I know. \n",
      "tensor(0.6257, grad_fn=<MaxBackward1>)\n",
      "  It's not... \n",
      "tensor(0.5392, grad_fn=<MaxBackward1>)\n",
      "  I know, I know... \n",
      "tensor(0.6464, grad_fn=<MaxBackward1>)\n",
      "  Which one did you take, Will? \n",
      "tensor(0.4965, grad_fn=<MaxBackward1>)\n",
      "  Over at Tri tech. One of the jobs Professor Lambeau set me up with. I haven't told him yet, but I talked to my new boss over there and he seemed like a nice guy. \n",
      "tensor(0.9113, grad_fn=<MaxBackward1>)\n",
      "  That's what you want? \n",
      "tensor(0.3547, grad_fn=<MaxBackward1>)\n",
      "  Yeah, I think so. \n",
      "tensor(0.4976, grad_fn=<MaxBackward1>)\n",
      "  Good for you. Congratulations. \n",
      "tensor(0.9618, grad_fn=<MaxBackward1>)\n",
      "  Thanks you.  So, that's it? We're done? \n",
      "tensor(0.9136, grad_fn=<MaxBackward1>)\n",
      "  We're done. You did your time. You're a free man. \n",
      "tensor(0.8371, grad_fn=<MaxBackward1>)\n",
      "  I just want you to know, Sean... \n",
      "tensor(0.8584, grad_fn=<MaxBackward1>)\n",
      "  You're Welcome, Will. \n",
      "tensor(0.9394, grad_fn=<MaxBackward1>)\n",
      "  I'll keep in touch. \n",
      "tensor(0.8647, grad_fn=<MaxBackward1>)\n",
      "  I'm gonna travel a little bit, so I don't know where I'll be. \n",
      "tensor(0.5280, grad_fn=<MaxBackward1>)\n",
      "  No. Thank you. \n",
      "tensor(0.3481, grad_fn=<MaxBackward1>)\n",
      "  Does this violate the patient/doctor relationship? \n",
      "tensor(0.8933, grad_fn=<MaxBackward1>)\n",
      "  Only if you grab my ass. \n",
      "tensor(0.8984, grad_fn=<MaxBackward1>)\n",
      "  See ya. \n",
      "tensor(0.8975, grad_fn=<MaxBackward1>)\n",
      "  Good luck. \n",
      "tensor(0.9145, grad_fn=<MaxBackward1>)\n"
     ]
    }
   ],
   "source": [
    "from torch.nn.functional import softmax\n",
    "\n",
    "conversation_emotions = []\n",
    "\n",
    "for conversation in conversations:\n",
    "    for character,utterance in conversation:\n",
    "        utterance_to_predict = preprocess_data(utterance)\n",
    "        input_ids, att_masks = process_data([utterance_to_predict])\n",
    "        output = new_model(input_ids = input_ids, attention_mask=att_masks)\n",
    "        prediction = np.argmax(output.logits.cpu().detach().numpy(),axis=-1)\n",
    "        confidence = torch.max(softmax(output.logits, dim=1))\n",
    "        print(utterance)\n",
    "\n",
    "        if confidence > 0.70:\n",
    "          emotion = emotions_dictionary_inverted[prediction[0]]\n",
    "        else:\n",
    "          emotion = \"NETRUAL\"\n",
    "        print(emotion)\n",
    "        \n",
    "        conversation_emotions.append((character, emotion))\n",
    "    \n",
    "\n",
    "\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 290,
   "id": "4c9fcacd",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[('WILL ', 'surprise'),\n",
       " (' SEAN ', 'surprise'),\n",
       " (' WILL ', 'NETRUAL'),\n",
       " (' SEAN ', 'surprise'),\n",
       " ('WILL ', 'surprise'),\n",
       " (' SEAN ', 'NETRUAL'),\n",
       " (' WILL ', 'anger'),\n",
       " (' SEAN ', 'NETRUAL'),\n",
       " (' WILL ', 'NETRUAL'),\n",
       " (' SEAN ', 'NETRUAL'),\n",
       " ('WILL ', 'anger'),\n",
       " (' SEAN ', 'NETRUAL'),\n",
       " (' WILL ', 'anger'),\n",
       " (' SEAN ', 'surprise'),\n",
       " (' WILL ', 'anger'),\n",
       " ('SEAN ', 'NETRUAL'),\n",
       " (' WILL ', 'NETRUAL'),\n",
       " ('SEAN ', 'NETRUAL'),\n",
       " (' WILL ', 'surprise'),\n",
       " (' SEAN ', 'surprise'),\n",
       " (' SEAN ', 'NETRUAL'),\n",
       " (' WILL ', 'surprise'),\n",
       " ('SEAN ', 'NETRUAL'),\n",
       " (' WILL ', 'NETRUAL'),\n",
       " (' SEAN ', 'NETRUAL'),\n",
       " (' WILL ', 'anger'),\n",
       " (' SEAN ', 'NETRUAL'),\n",
       " (' WILL ', 'sadness'),\n",
       " (' SEAN ', 'NETRUAL'),\n",
       " (' WILL ', 'surprise'),\n",
       " (' SEAN ', 'NETRUAL'),\n",
       " (' WILL ', 'NETRUAL'),\n",
       " (' SEAN ', 'surprise'),\n",
       " (' WILL ', 'surprise'),\n",
       " (' SEAN ', 'NETRUAL'),\n",
       " (' WILL ', 'NETRUAL'),\n",
       " (' SEAN ', 'surprise'),\n",
       " ('SEAN ', 'NETRUAL'),\n",
       " (' WILL ', 'anger'),\n",
       " (' SEAN ', 'anger'),\n",
       " (' WILL ', 'anger'),\n",
       " ('SEAN ', 'anger'),\n",
       " (' WILL ', 'NETRUAL'),\n",
       " ('WILL ', 'surprise'),\n",
       " (' SEAN ', 'joy'),\n",
       " (' WILL ', 'NETRUAL'),\n",
       " (' SEAN ', 'NETRUAL'),\n",
       " (' WILL ', 'NETRUAL'),\n",
       " (' SEAN ', 'NETRUAL'),\n",
       " (' WILL ', 'NETRUAL'),\n",
       " (' SEAN ', 'joy'),\n",
       " ('WILL ', 'NETRUAL'),\n",
       " (' SEAN ', 'surprise'),\n",
       " (' WILL ', 'joy'),\n",
       " ('SEAN ', 'NETRUAL'),\n",
       " (' WILL ', 'NETRUAL'),\n",
       " (' SEAN ', 'surprise'),\n",
       " (' WILL ', 'NETRUAL'),\n",
       " (' SEAN ', 'surprise'),\n",
       " (' WILL ', 'NETRUAL'),\n",
       " (' SEAN ', 'anger'),\n",
       " (' WILL ', 'NETRUAL'),\n",
       " (' SEAN ', 'NETRUAL'),\n",
       " (' WILL ', 'joy'),\n",
       " (' SEAN ', 'anger'),\n",
       " (' WILL ', 'NETRUAL'),\n",
       " (' SEAN ', 'joy'),\n",
       " ('SEAN ', 'NETRUAL'),\n",
       " (' WILL ', 'anger'),\n",
       " (' SEAN ', 'sadness'),\n",
       " (' WILL ', 'NETRUAL'),\n",
       " (' SEAN ', 'sadness'),\n",
       " (' WILL ', 'joy'),\n",
       " ('SEAN ', 'surprise'),\n",
       " (' SEAN ', 'NETRUAL'),\n",
       " (' WILL ', 'anger'),\n",
       " (' SEAN ', 'sadness'),\n",
       " (' WILL ', 'NETRUAL'),\n",
       " (' SEAN ', 'anger'),\n",
       " (' WILL ', 'joy'),\n",
       " (' SEAN ', 'NETRUAL'),\n",
       " (' WILL ', 'NETRUAL'),\n",
       " (' SEAN ', 'sadness'),\n",
       " (' WILL ', 'surprise'),\n",
       " (' SEAN ', 'surprise'),\n",
       " ('WILL ', 'NETRUAL'),\n",
       " (' SEAN ', 'sadness'),\n",
       " (' WILL ', 'surprise'),\n",
       " (' SEAN ', 'NETRUAL'),\n",
       " (' WILL ', 'NETRUAL'),\n",
       " (' SEAN ', 'joy'),\n",
       " (' WILL ', 'sadness'),\n",
       " (' SEAN ', 'surprise'),\n",
       " (' WILL ', 'surprise'),\n",
       " (' SEAN ', 'NETRUAL'),\n",
       " (' WILL ', 'anger'),\n",
       " ('SEAN ', 'sadness'),\n",
       " (' WILL ', 'NETRUAL'),\n",
       " (' SEAN ', 'joy'),\n",
       " (' WILL ', 'surprise'),\n",
       " (' SEAN ', 'NETRUAL'),\n",
       " ('WILL ', 'joy'),\n",
       " (' SEAN ', 'surprise'),\n",
       " ('SEAN ', 'surprise'),\n",
       " (' WILL ', 'NETRUAL'),\n",
       " (' SEAN ', 'joy'),\n",
       " (' WILL ', 'NETRUAL'),\n",
       " (' SEAN ', 'NETRUAL'),\n",
       " (' WILL ', 'surprise'),\n",
       " ('SEAN ', 'NETRUAL'),\n",
       " (' WILL ', 'surprise'),\n",
       " (' SEAN ', 'surprise'),\n",
       " (' WILL ', 'NETRUAL'),\n",
       " (' SEAN ', 'NETRUAL'),\n",
       " (' WILL ', 'NETRUAL'),\n",
       " ('SEAN ', 'NETRUAL'),\n",
       " (' WILL ', 'NETRUAL'),\n",
       " (' SEAN ', 'NETRUAL'),\n",
       " (' WILL ', 'NETRUAL'),\n",
       " (' SEAN ', 'fear'),\n",
       " (' WILL ', 'surprise'),\n",
       " (' SEAN ', 'anger'),\n",
       " (' WILL ', 'anger'),\n",
       " (' SEAN ', 'NETRUAL'),\n",
       " (' WILL ', 'anger'),\n",
       " (' SEAN ', 'anger'),\n",
       " (' WILL ', 'NETRUAL'),\n",
       " (' SEAN ', 'NETRUAL'),\n",
       " ('WILL ', 'surprise'),\n",
       " (' SEAN ', 'anger'),\n",
       " (' WILL ', 'surprise'),\n",
       " ('SEAN ', 'joy'),\n",
       " (' WILL ', 'anger'),\n",
       " (' SEAN ', 'NETRUAL'),\n",
       " ('WILL ', 'fear'),\n",
       " (' SEAN ', 'anger'),\n",
       " (' WILL ', 'NETRUAL'),\n",
       " ('SEAN ', 'surprise'),\n",
       " (' WILL ', 'NETRUAL'),\n",
       " ('SEAN ', 'NETRUAL'),\n",
       " (' WILL ', 'surprise'),\n",
       " (' SEAN ', 'NETRUAL'),\n",
       " (' WILL ', 'surprise'),\n",
       " (' SEAN ', 'NETRUAL'),\n",
       " (' WILL ', 'NETRUAL'),\n",
       " ('SEAN ', 'NETRUAL'),\n",
       " (' WILL ', 'NETRUAL'),\n",
       " (' SEAN ', 'NETRUAL'),\n",
       " (' WILL ', 'anger'),\n",
       " ('WILL ', 'surprise'),\n",
       " (' SEAN ', 'NETRUAL'),\n",
       " (' WILL ', 'NETRUAL'),\n",
       " (' SEAN ', 'NETRUAL'),\n",
       " (' WILL ', 'NETRUAL'),\n",
       " (' SEAN ', 'NETRUAL'),\n",
       " (' WILL ', 'NETRUAL'),\n",
       " (' SEAN ', 'NETRUAL'),\n",
       " (' WILL ', 'anger'),\n",
       " (' SEAN ', 'NETRUAL'),\n",
       " (' WILL ', 'NETRUAL'),\n",
       " (' SEAN ', 'NETRUAL'),\n",
       " (' WILL ', 'NETRUAL'),\n",
       " ('SEAN ', 'NETRUAL'),\n",
       " (' WILL ', 'joy'),\n",
       " (' SEAN ', 'NETRUAL'),\n",
       " (' WILL ', 'NETRUAL'),\n",
       " (' SEAN ', 'joy'),\n",
       " (' WILL ', 'joy'),\n",
       " (' SEAN ', 'joy'),\n",
       " ('WILL ', 'joy'),\n",
       " (' SEAN ', 'joy'),\n",
       " (' WILL ', 'joy'),\n",
       " (' SEAN ', 'NETRUAL'),\n",
       " ('SEAN ', 'NETRUAL'),\n",
       " (' WILL ', 'anger'),\n",
       " (' SEAN ', 'anger'),\n",
       " ('WILL ', 'joy'),\n",
       " (' SEAN ', 'joy')]"
      ]
     },
     "execution_count": 290,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "conversation_emotions"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 302,
   "id": "8bdd0a3b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>character</th>\n",
       "      <th>emotion</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>WILL</td>\n",
       "      <td>surprise</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>SEAN</td>\n",
       "      <td>surprise</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>WILL</td>\n",
       "      <td>NETRUAL</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>SEAN</td>\n",
       "      <td>surprise</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>WILL</td>\n",
       "      <td>surprise</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>173</th>\n",
       "      <td>SEAN</td>\n",
       "      <td>NETRUAL</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>174</th>\n",
       "      <td>WILL</td>\n",
       "      <td>anger</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>175</th>\n",
       "      <td>SEAN</td>\n",
       "      <td>anger</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>176</th>\n",
       "      <td>WILL</td>\n",
       "      <td>joy</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>177</th>\n",
       "      <td>SEAN</td>\n",
       "      <td>joy</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>178 rows Ã— 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    character   emotion\n",
       "0       WILL   surprise\n",
       "1       SEAN   surprise\n",
       "2       WILL    NETRUAL\n",
       "3       SEAN   surprise\n",
       "4       WILL   surprise\n",
       "..        ...       ...\n",
       "173     SEAN    NETRUAL\n",
       "174     WILL      anger\n",
       "175     SEAN      anger\n",
       "176     WILL        joy\n",
       "177     SEAN        joy\n",
       "\n",
       "[178 rows x 2 columns]"
      ]
     },
     "execution_count": 302,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "will_emotions = []\n",
    "sean_emotions = []\n",
    "\n",
    "for emotion in conversation_emotions:\n",
    "    if emotion[0] == 'WILL':\n",
    "        will_emotions.append(emotion[1])\n",
    "    else:\n",
    "        sean_emotions.append(emotion[1])\n",
    "    \n",
    "\n",
    "df = pandas.DataFrame(conversation_emotions, columns=['character', 'emotion'])  \n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 87,
   "id": "d592943f",
   "metadata": {},
   "outputs": [],
   "source": [
    "will_emotions = (df[df['character'] == ' WILL '])['emotion']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 288,
   "id": "c686d920",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "([<matplotlib.patches.Wedge at 0x7f89cc0eaa00>,\n",
       "  <matplotlib.patches.Wedge at 0x7f8958a3ec10>,\n",
       "  <matplotlib.patches.Wedge at 0x7f89cc0e68b0>,\n",
       "  <matplotlib.patches.Wedge at 0x7f8958a40760>],\n",
       " [Text(0.3571693699839605, 1.040398981710988, 'Anger'),\n",
       "  Text(-0.967421087629068, -0.523542203848545, 'Surprise'),\n",
       "  Text(0.6756340288727332, -0.868054525377985, 'Joy'),\n",
       "  Text(1.0849974419956991, -0.18105399985305384, 'Sadness')],\n",
       " [Text(0.19481965635488752, 0.5674903536605389, '39.5%'),\n",
       "  Text(-0.5276842296158551, -0.285568474826479, '36.8%'),\n",
       "  Text(0.3685276521123999, -0.47348428656980995, '18.4%'),\n",
       "  Text(0.5918167865431085, -0.0987567271925748, '5.3%')])"
      ]
     },
     "execution_count": 288,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Grafico emozioni will con SEAN\n",
    "\n",
    "will_emotions.value_counts().tolist()\n",
    "\n",
    "import matplotlib.pyplot as plt\n",
    "labels = 'Anger', 'Surprise', 'Joy', 'Sadness'\n",
    "sizes = (will_emotions.value_counts().tolist())[1:]\n",
    "fig, ax = plt.subplots()\n",
    "ax.pie(sizes, labels=labels, autopct='%1.1f%%')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 308,
   "id": "4aadda1a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[13, 10, 9, 5, 1]"
      ]
     },
     "execution_count": 308,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sean_emotions = (df[df['character'] == ' SEAN '])\n",
    "sean_emotions = sean_emotions[sean_emotions['emotion'] != 'NETRUAL']\n",
    "sean_emotions.value_counts().tolist()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 310,
   "id": "8d8ce489",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "([<matplotlib.patches.Wedge at 0x7f8970721190>,\n",
       "  <matplotlib.patches.Wedge at 0x7f897442e580>,\n",
       "  <matplotlib.patches.Wedge at 0x7f8970721d30>,\n",
       "  <matplotlib.patches.Wedge at 0x7f89706f93a0>,\n",
       "  <matplotlib.patches.Wedge at 0x7f89706f9a30>],\n",
       " [Text(0.5235421132720435, 0.9674211366466224, 'Surprise'),\n",
       "  Text(-1.0849974462335736, 0.18105397445685545, 'Joy'),\n",
       "  Text(-0.1810539236644592, -1.0849974547093206, 'Anger'),\n",
       "  Text(0.9208832150306883, -0.6016428377989249, 'Sadness'),\n",
       "  Text(1.0962429571347696, -0.0908371010788867, 'Fear')],\n",
       " [Text(0.2855684254211146, 0.5276842563527031, '34.2%'),\n",
       "  Text(-0.5918167888546765, 0.09875671334010296, '26.3%'),\n",
       "  Text(-0.09875668563515955, -0.5918167934778112, '23.7%'),\n",
       "  Text(0.5022999354712845, -0.32816882061759534, '13.2%'),\n",
       "  Text(0.5979507038916925, -0.04954750967939274, '2.6%')])"
      ]
     },
     "execution_count": 310,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Grafico emozioni SEAN con WILL\n",
    "\n",
    "import matplotlib.pyplot as plt\n",
    "labels = 'Surprise','Joy', 'Anger', 'Sadness', 'Fear'\n",
    "sizes = sean_emotions.value_counts().tolist()\n",
    "fig, ax = plt.subplots()\n",
    "ax.pie(sizes, labels=labels, autopct='%1.1f%%')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c5799747",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Costruiamo un grafico dove le emozioni di Will vengono divise in 5 sottogruppi (le emozioni sono ordinate cronologicamente)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 162,
   "id": "23383f55",
   "metadata": {},
   "outputs": [],
   "source": [
    "lists = np.array_split(will_emotions.tolist(), 5) \n",
    "indexes = []\n",
    "\n",
    "for index in range(1, len(lists)+1):\n",
    "    indexes.append(str(index))\n",
    "    \n",
    "list_to_plot = []\n",
    "\n",
    "\n",
    "for index in range(0, len(lists)):\n",
    "    for item in lists[index]:\n",
    "        list_to_plot.append([index+1, item])\n",
    "\n",
    "\n",
    "\n",
    "second_graph_df = pandas.DataFrame(list_to_plot, columns = ['index', 'emotion']) \n",
    "second_graph_df = second_graph_df[second_graph_df['emotion'] != 'NETRUAL']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 187,
   "id": "249724ce",
   "metadata": {},
   "outputs": [],
   "source": [
    "first = second_graph_df[second_graph_df['index'] == 1].filter(['emotion'])\n",
    "second = second_graph_df[second_graph_df['index'] == 2].filter(['emotion'])\n",
    "third = second_graph_df[second_graph_df['index'] == 3].filter(['emotion'])\n",
    "fourth = second_graph_df[second_graph_df['index'] == 4].filter(['emotion'])\n",
    "fifth = second_graph_df[second_graph_df['index'] == 5].filter(['emotion'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 188,
   "id": "e7581bd7",
   "metadata": {},
   "outputs": [],
   "source": [
    "first = first.assign(count=lambda x: 1).groupby(['emotion'])['count'].sum().to_dict()\n",
    "second = second.assign(count=lambda x: 1).groupby(['emotion'])['count'].sum().to_dict()\n",
    "third = third.assign(count=lambda x: 1).groupby(['emotion'])['count'].sum().to_dict()\n",
    "fourth = fourth.assign(count=lambda x: 1).groupby(['emotion'])['count'].sum().to_dict()\n",
    "fifth = fifth.assign(count=lambda x: 1).groupby(['emotion'])['count'].sum().to_dict()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 200,
   "id": "5309a902",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 0.98, 'Categorical Plotting')"
      ]
     },
     "execution_count": 200,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1800x500 with 5 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, axs = plt.subplots(1, 5, figsize=(18, 5), sharey=True)\n",
    "axs[0].bar(list(first.keys()), list(first.values()))\n",
    "axs[1].bar(list(second.keys()), list(second.values()))\n",
    "axs[2].bar(list(third.keys()), list(third.values()))\n",
    "axs[3].bar(list(fourth.keys()), list(fourth.values()))\n",
    "axs[4].bar(list(fifth.keys()), list(fifth.values()))\n",
    "fig.suptitle('Categorical Plotting')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "7b63b1df",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4de6a8f0",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4e5aeade",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Pie-chart sulle emozioni in generale di Will durante il film"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 238,
   "id": "26583082",
   "metadata": {},
   "outputs": [],
   "source": [
    "conv_lines = open('movie_conversations.txt', encoding='utf-8', errors='ignore').read().split('\\n')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 239,
   "id": "fecbfc24",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Prendo tutte le conversazioni del film\n",
    "\n",
    "WILL_HUNTING_MOVIE_ID = ' m373 '\n",
    "\n",
    "conversations = []\n",
    "\n",
    "for conversation in conv_lines:\n",
    "    try:\n",
    "        if conversation.split('+++$+++')[2] == WILL_HUNTING_MOVIE_ID :\n",
    "            conversations.append(conversation)\n",
    "    except:\n",
    "        pass"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 240,
   "id": "2435df0d",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Prendo tutte le utterances del film\n",
    "\n",
    "from collections import defaultdict\n",
    "\n",
    "movie_lines = defaultdict(lambda: \"\")\n",
    "\n",
    "for line in lines:\n",
    "    try:\n",
    "        line_elements = line.split('+++$+++')\n",
    "        line_id, character_id, movie_id, text = line_elements[0], line_elements[1], line_elements[2], line_elements[4] \n",
    "        if movie_id == WILL_HUNTING_MOVIE_ID:\n",
    "            line_id = line_id.replace(' ', '')\n",
    "            movie_lines[line_id] = (character_id.replace(' ', ''), text)\n",
    "    except:\n",
    "        pass"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 271,
   "id": "b74258b2",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Filtro le utterance prendendo solo quelle dove WILL Ã¨ il primo o il secondo \n",
    "#Â personaggio coinvolto nella conversazione\n",
    "\n",
    "WILL_CHARACTER_ID = ' u5621 ' \n",
    "\n",
    "will_utterances = []\n",
    "\n",
    "for conversation in conversations:\n",
    "    elements = conversation.split('+++$+++')\n",
    "    first_character_id, second_character_id, lines_id = elements[0], elements[1], elements[3]\n",
    "    \n",
    "    if first_character_id == WILL_CHARACTER_ID or second_character_id == WILL_CHARACTER_ID:\n",
    "        lines_id = lines_id.replace('[', '')\n",
    "        lines_id = lines_id.replace(']', '')\n",
    "        lines_id = lines_id.replace(\"'\", '')\n",
    "        lines_id = lines_id.replace(\" \", '')\n",
    "        lines_id = lines_id.split(',')\n",
    "        \n",
    "        for line in lines_id:\n",
    "            will_utterances.append(line)\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 276,
   "id": "422c1be6",
   "metadata": {},
   "outputs": [],
   "source": [
    "for index in range(0, len(will_utterances)):\n",
    "    line_id = will_utterances[index]\n",
    "    will_utterances[index] = movie_lines[line_id][1]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 277,
   "id": "b007cd11",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[' Chuckie, what the fuck happened?',\n",
       " \" Okay. He's driving along and this fuckin' cat jumps in front of his car, and so he hits this cat--\",\n",
       " ' Yeah, so he\\'s like \"Check the front of my truck, I can prove I hit it \\'cause there\\'s probably some blood or something\"--',\n",
       " ' --or a tail--',\n",
       " \" Stop brushin' me back!\",\n",
       " ' Stop crowdin the plate!',\n",
       " \" Casey's bouncin' at a bar up Harvard. We should go there sometime.\",\n",
       " ' What are we gonna do up there?',\n",
       " \" I don't know, we'll fuck up some smart kids.  You'd prob'ly fit right in.\",\n",
       " ' Fuck you.',\n",
       " \" She's sharp as a marble.\",\n",
       " ' We\\'re not goin\\'.  I don\\'t even like \"Kelly\\'s.\"',\n",
       " \" She didn't do it again did she?\",\n",
       " ' Jesus Christ. Not even close.',\n",
       " \" Jesus, that's really bad, did anyone even order a Flyin' Fish?\",\n",
       " \" No, and we got four of 'em.\",\n",
       " ' What do we got?',\n",
       " \" I don't know yet.\",\n",
       " \" Hey, thanks for comin' out.\",\n",
       " \" Yeah, you're all invited over to Morgan's house for a complementary fish sandwhich.\",\n",
       " \" When's the arraignment?\",\n",
       " ' Next week.',\n",
       " \" What'd you get? You get leniency?\",\n",
       " \" Probation, counselin', few days a week.\",\n",
       " \" You're fuckin' good.\",\n",
       " \" Who'd you call?\",\n",
       " \" No one. I didn't have the number.\",\n",
       " \" I didn't get on Cathy last night.\",\n",
       " ' Why not?',\n",
       " \" I don't know.\",\n",
       " \" I don't know what the fuck you're doin'. You're givin' us a ride.\",\n",
       " ' What do I look like, Al Cowlins?  You want to take my car, drop her off?',\n",
       " \" I was countin' on it.\",\n",
       " ' Thanks, Chuck.',\n",
       " \" Don't get too slap-happy, you're takin' me home first. WILL I don't know, Chuck. It's kinda outta the way.\",\n",
       " \" How's the woman?\",\n",
       " ' Gone.',\n",
       " ' What?',\n",
       " ' She went to Medical school in California.',\n",
       " \" Sorry, brother.  I don't know what to tell ya. You know all the girls I been with. You been with 'em too, except for Cheryl McGovern which was a big mistake on your part brother...\",\n",
       " \" Oh I'm sure, that's why only one of us has herpes.\",\n",
       " ' Some shows are worth the price of admission, partner.',\n",
       " \" Suck my crank. Fuckin' sheet metal pussy.  So, when are you done with those meetin's?\",\n",
       " \" Week after I'm twenty-one.\",\n",
       " \" Are they hookin' you up with a job?\",\n",
       " ' Yeah, sit in a room and do long division for the next fifty years.',\n",
       " \" Yah, but it's better than this shit. At least you'd make some nice bank.\",\n",
       " \" Yeah, be a fuckin' lab rat.\",\n",
       " \" It's a way outta here.\",\n",
       " ' What do I want a way outta here for? I want to live here the rest of my life. I want to be your next door neighbor. I want to take out kids to little league together up Foley Field.',\n",
       " \" Look, you're my best friend, so don't take this the wrong way, but in 20 years, if you're livin' next door to me, comin' over watchin' the fuckin' Patriots' games and still workin' construction, I'll fuckin' kill you. And that's not a threat, that's a fact. I'll fuckin' kill you.\",\n",
       " \" Chuckie, what are you talkin'...\",\n",
       " \" Listen, you got somethin' that none of us have.\",\n",
       " \" Why is it always this? I owe it to myself? What if I don't want to?\",\n",
       " \" Fuck you. You owe it to me. Tomorrow I'm gonna wake up and I'll be fifty and I'll still be doin' this. And that's all right 'cause I'm gonna make a run at it. But you, you're sittin' on a winning lottery ticket and you're too much of a pussy to cash it in. And that's bullshit 'cause I'd do anything to have what you got! And so would any of these guys. It'd be a fuckin' insult to us if you're still here in twenty years.\",\n",
       " \" You don't know that.\",\n",
       " \" Let me tell you what I do know. Every day I come by to pick you up, and we go out drinkin' or whatever and we have a few laughs. But you know what the best part of my day is? The ten seconds before I knock on the door 'cause I let myself think I might get there, and you'd be gone. I'd knock on the door and you wouldn't be there. You just left.\",\n",
       " ' You and Morgan throw?',\n",
       " ' No, I had to talk him down.',\n",
       " \" Why didn't you yoke him?\",\n",
       " \" Little Morgan's got a lot a scrap, dude. I'd rather fight a big kid, they never fight, everyone's scared of 'em. You know how many people try to whip Morgan's ass every week? Fuckin' kid won't back down.\",\n",
       " \" You're kiddin' me.\",\n",
       " \" Yeah, I figured now that you got your big job over in Cambridge, you needed some way to get over there and I knew I wasn't gonna drive you every day...\",\n",
       " ' So why do you think I should work for the National Security Agency?',\n",
       " \" Well, you'd be working on the cutting edge. You'd be exposed to the kind of technology you couldn't see anywhere else because we've classified it. Super string theory, Chaos Math, Advanced algorithms--\",\n",
       " ' Codebreaking.',\n",
       " \" That's one aspect of what we do.\",\n",
       " \" Come on, that's what you do. You handle more than eighty percent of the intelligence workload. You're seven times the size of the C.I.A.\",\n",
       " ' That\\'s exactly right, Will. So the question as I see it isn\\'t \"why should you work for N.S.A.\" it\\'s \"why shouldn\\'t you?\"',\n",
       " \" Why shouldn't I work for the National Security Agency? That's a tough one.\",\n",
       " \" Okay, you're in your bed, Will. Now how old are you?\",\n",
       " ' Seven.',\n",
       " ' And what do you see?',\n",
       " \" Somethin's in my room.\",\n",
       " ' What is it?',\n",
       " \" It's like a small figure, hoverin' over me. Gettin' closer.\",\n",
       " \" You're in a safe place, Will.\",\n",
       " \" It's touching me.\",\n",
       " ' Where is it touching you?',\n",
       " \" Down there.  And I'm nervous.\",\n",
       " \" You don't have to be nervous, Will.\",\n",
       " \" Oh, I'm sorry.\",\n",
       " \" What're you doing?\",\n",
       " \" I'm sorry.\",\n",
       " \" What's your name?  Don't you walk away from me. This is people's work, you can't graffiti here.\",\n",
       " ' Hey fuck you.',\n",
       " \" Well... I'll be speaking to your supervisor.\",\n",
       " ' Hello. Gerald Lambeau, M.I.T.',\n",
       " ' Fuck do you want?',\n",
       " \" I've spoken with the judge and he's agreed to release you under my supervision.\",\n",
       " ' Really?',\n",
       " ' Yes. Under two conditions.',\n",
       " \" What're those?\",\n",
       " ' That you meet with me twice a week--',\n",
       " ' If I agree to this, I walk right now?',\n",
       " \" That's right.\",\n",
       " \" I'll do the work. I'm not going to meet with a therapist.\",\n",
       " \" Now, it won't be as bad as it sounds, Will.  I've already spoken to one therapist, his name is Henry Lipkin and he's a friend of mine. He's also published four books and is widely considered to be one of the brightest men in his field.  I'm sure it'll be better than spending the next six months in jail.\",\n",
       " ' This rectangle is subdivided into rectangles. One edge of an inner rectangle is an integer. Can you prove that one edge of the larger rectangle is an integer?',\n",
       " ' Of course.',\n",
       " ' Okay. How?',\n",
       " \" It's an integer proof.\",\n",
       " \" That would be a monumental waste of time, wouldn't it, Will?\",\n",
       " ' I think so.',\n",
       " ' I happen to know so.',\n",
       " \" What's that?\",\n",
       " ' Half-red, half-black--',\n",
       " ' --that?--',\n",
       " ' --Half-red, half-black--',\n",
       " ' --That edge!',\n",
       " ' An integer.',\n",
       " ' Shall we start the, uh...',\n",
       " \" Yeah, when do I get my hypnosis? You guys been talkin' for twenty minutes.\",\n",
       " \" Oh, for God's sake, Will.\",\n",
       " \" Oh, come on! You're not pinnin' this one on me. He left, I wanted to talk to him for another twenty minutes. I was havin' fun.\",\n",
       " ' I told you to cooperate with these people.',\n",
       " \" C'mon, that guy was a fuckin' piece of work.\",\n",
       " ' Get out, Will.',\n",
       " \" Okay...don't forget to get another therapist for next week.\",\n",
       " \" That's enough.\",\n",
       " ' No.',\n",
       " ' Will, this is Sean Maguire. Sean, Will Hunting.',\n",
       " ' This is correct. I see you used Mclullen here--',\n",
       " \" I don't know what it's called.\",\n",
       " \" --This can't be right.  This is going to be very embarrassing. Have you ever considered--\",\n",
       " \" I'm pretty sure it's right.\",\n",
       " \" Can I ask you a favor, can we do this at Sean's from now on? 'Cause I leave work to come here and the fuckin' commute is killin' me--\",\n",
       " \" That's fine, but did you ever think--\",\n",
       " \" It's right.  Take it home with you.\",\n",
       " ' Will, what happened at the Tri-tech meeting?',\n",
       " \" I couldn't go 'cause I had a date. So I sent my cheif negotiator.\",\n",
       " \" Will, on your own time, you can do what you like. When I set up a meeting, with my associates, and you don't show up it reflects poorly on me.\",\n",
       " \" Then don't set up any more meetings.\",\n",
       " \" I'll cancel every meeting right now. I'll give you a job myself. I just wanted you to see what was out there.\",\n",
       " \" --Maybe I don't want to spend my life sittin' around and explaining shit to people.\",\n",
       " ' The least you can do is show me a little appreciation.',\n",
       " \" --You know how fuckin' easy this is to me? This is a joke!  And I'm sorry you can't do this. I really am. 'Cause if you could I wouldn't be forced to watch you fumble around and fuck it up.\",\n",
       " \" Sure, then you'd have more time to sit around and get drunk. Think of how many fights you could have been in by now.\",\n",
       " \" Well, I'm sorry.\",\n",
       " \" So am I.  Yes. That's right, Will. Most days I wish I never met you. Because then I could sleep at night. I wouldn't have to walk around with the knowledge that someone like you was out there. And I wouldn't have to watch you throw it all away.\",\n",
       " ' What are you smiling at?',\n",
       " \" It's a Carlton Fisk baseball card.\",\n",
       " ' I can come back.',\n",
       " \" No, that's fine, Will. I was just leaving.\",\n",
       " ' Will.',\n",
       " \" Hey, how you doin'?\",\n",
       " \" You know, you're no longer required to come here.\",\n",
       " \" I was just sayin' goodbye to Sean.\",\n",
       " ' Sam called me. From Tri-tech. He says you start working for them next week.',\n",
       " ' Thank you.',\n",
       " \" I just want you to know...It's been a pleasure.\",\n",
       " ' Bullshit.',\n",
       " \" This job... Do it if it's what you really want.\",\n",
       " ' I appreciate that.',\n",
       " ' Yes.',\n",
       " \" Listen, I'll be nearby so, if you need some help, or you get stuck again, don't be afraid to give me a call.\",\n",
       " \" Thank you, Will. I'll do that.\",\n",
       " \" It's walkin' pretty slow at this point.\",\n",
       " \" You guys are fuckin' sick.\",\n",
       " ' I could go for a Whopper.',\n",
       " ' Let\\'s hit \"Kelly\\'s.\"',\n",
       " ' Well, she out did herself today...',\n",
       " \" I don't got a crush on her.\",\n",
       " ' What happened?  You got fired, huh?',\n",
       " ' Yeah, Morgan. I got fired.',\n",
       " \" How fuckin' retarded do you have to be to get shit-canned from that job? How hard is it to push a fuckin' broom?\",\n",
       " ' There goes that fuckin\\' Barney right now, with his fuckin\\' \"skiin\\' trip.\" We should\\'a kicked that dude\\'s ass.',\n",
       " ' Hold up.',\n",
       " \" Will, I can't believe you brought Skylar here when we're all wrecked. What's she gonna think about us?\",\n",
       " \" Yeah, Morgan. It's a real rarity that we'd be out drinkin'.\",\n",
       " ' So, you finally got a job Morgan?',\n",
       " \" Had one, now I'm fucked again.\",\n",
       " \" So what do you got, a fuckin' Hyundai engine under there? Can I make it back to my house?\",\n",
       " \" That's why I love stock-car racin'. That Dale Ernhart's real good.\",\n",
       " ' Now you know Will, and I know, what you need to be doing. You have a gift.',\n",
       " ' I could work the pit maybe, but I could never drive like Dale Ernhart--',\n",
       " ' --you have a quality-- something you were born with, that you have no control over- and you are, in a sense, hiding that by becoming a janitor. And I\\'m not saying that\\'s wrong. I\\'m friends with the janitor that works in my building. He\\'s been to my house for dinner. As a matter of fact I did some free consultation for \"Mike\" -- that\\'s not his real name. That\\'s in my book.',\n",
       " ' Yeah, I read your book. \"Mike\" had the same problems as \"Chad\" the stockbroker.',\n",
       " \" Yes. The pressures you feel, and again, I am neither labeling nor judging them, are keeping you from fulfilling your potential -- you're in a rut. So stop the Tom Foolery -- the Shenanigan's, Will.\",\n",
       " \" You're right. I know.\",\n",
       " ' Will, your not getting off that easy.',\n",
       " ' No, but, I mean you know...I do other things. That no one knows about.',\n",
       " ' Like what, Will?',\n",
       " ' I go places, I interact.',\n",
       " ' What places?',\n",
       " \" Certain, clubs.  Like, Paradise. It's not bad.\",\n",
       " ' I might understand that.',\n",
       " \" Do you find it hard to hide the fact that you're gay?\",\n",
       " ' What?',\n",
       " \" C'mon, I read your book. I talked to you. It's just something I know to be true.\",\n",
       " \" That's very presumptuous.\",\n",
       " ' Buddy, two seconds ago you were ready to give me a jump.',\n",
       " \" Well, I'm sorry to disappoint you, but I'm married and I have two children.\",\n",
       " \" I'm sure you do. You probably got a real nice house, nice car -- your book's a best seller.\",\n",
       " \" You're getting defensive, Will.\",\n",
       " \" Look, man. I don't care if you're putting from the rough. There are solid arguments that some of the greatest people in history were gay; Alexander the Great, Caeser, Shakespeare, Oscar Wilde, Napoleon, Gertrude Stein, not to mention Danny Terrio, not many straight men can dance like that.\",\n",
       " ' Who is \"Danny Terrio?\"',\n",
       " ' If you wanna hit \"Ramrod,\" take your shot. Take some pride in it. You go to church? So fuckin\\' what, God loves you. I mean, Christ. A guy as well known as you? By the time you put your disguise on and skulk out of the house Sunday nights you probably look like \"Inspector Cluseau.\"',\n",
       " ' Well, I can see this is pointless...',\n",
       " \" You're getting defensive...Henry. And hey, cheif--tell the wife, at least. Christ, set her free.\",\n",
       " ' Did you buy all these books retail, or do you send away for like a \"shrink kit\" that comes with all these volumes included?',\n",
       " ' Have you read all these books, Will?',\n",
       " ' Probably not.',\n",
       " ' How about the ones on that shelf?',\n",
       " ' Yeah, I read those.',\n",
       " ' What did you think?',\n",
       " \" I'm not here for a fuckin' book report. They're your books, why don't you read 'em?\",\n",
       " ' I did.',\n",
       " ' That must have taken you a long time.',\n",
       " ' Yeah, it did take me a long time.',\n",
       " ' \"A History of the United States, Volume I.\" If you want to read a real history book, read Howard Zinn\\'s \"A People\\'s History of the United States.\" That book will knock you on your ass.',\n",
       " ' How about Noam Chomsky\\'s \"Manufacturing Consent?\"',\n",
       " \" You people baffle me. You spend all this money on beautiful, fancy books-- and they're the wrong fuckin' books.\",\n",
       " ' You think so?',\n",
       " ' Whatever blows your hair back.',\n",
       " \" Guy your age shouldn't smoke so much. Stunt your growth.\",\n",
       " \" You're right. It really gets in the way of my jazzercizing.\",\n",
       " ' Yes, I do.',\n",
       " ' Nautilus?',\n",
       " ' Free weights. WILL Oh yeah? Me too. What do you bench?',\n",
       " ' 285.',\n",
       " ' Oh.',\n",
       " ' Yeah. Do you paint?',\n",
       " ' No.',\n",
       " ' Crayons?',\n",
       " ' This is a real piece of shit.',\n",
       " ' Tell me what you really think.',\n",
       " \" Poor color composition, lousy use of space. But that shit doesn't really concern me.\",\n",
       " ' What does?',\n",
       " \" The color here, see how dark it is? It's interesting.\",\n",
       " ' What is?',\n",
       " \" I think you're one step away from cutting your ear off.\",\n",
       " ' Oh, \"Starry Night\" time, huh?',\n",
       " ' You ever heard the saying, \"any port in a storm?\"',\n",
       " ' Sure, how \\'bout \"still waters run deep\"--',\n",
       " ' --Well, maybe that means you.',\n",
       " ' Maybe what mea--',\n",
       " ' Maybe you should be a patient and sit down.',\n",
       " ' Maybe you married the wrong woman.',\n",
       " ' Watch your mouth.',\n",
       " \" That's it isn't it? You married the wrong woman. She leave you? Was she bangin' someone else?\",\n",
       " ' If you ever disrespect my wife again...I will end you.',\n",
       " \" Time's up.\",\n",
       " \" So what's with this place? You have a swan fetish? Is this something you'd like to talk about?\",\n",
       " \" I was thinking about what you said to me the other day, about my painting. I stayed up half the night thinking about it and then something occured to me and I fell into a deep peaceful sleep and haven't thought about you since. You know what occurred to me?\",\n",
       " ' No.',\n",
       " \" You're just a boy. You don't have the faintest idea what you're talking about.\",\n",
       " ' Why thank you.',\n",
       " \" You've never been out of Boston.\",\n",
       " ' No.',\n",
       " ' So if I asked you about art you could give me the skinny on every art book ever written...Michelangelo? You know a lot about him I bet. Life\\'s work, criticisms, political aspirations. But you couldn\\'t tell me what it smells like in the Sistine Chapel. You\\'ve never stood there and looked up at that beautiful ceiling. And if I asked you about women I\\'m sure you could give me a syllabus of your personal favorites, and maybe you\\'ve been laid a few times too. But you couldn\\'t tell me how it feels to wake up next to a woman and be truly happy. If I asked you about war you could refer me to a bevy of fictional and non-fictional material, but you\\'ve never been in one. You\\'ve never held your best friend\\'s head in your lap and watched him draw his last breath, looking to you for help. And if I asked you about love I\\'d get a sonnet, but you\\'ve never looked at a woman and been truly vulnerable. Known that someone could kill you with a look. That someone could rescue you from grief. That God had put an angel on Earth just for you. And you wouldn\\'t know how it felt to be her angel. To have the love be there for her forever. Through anything, through cancer. You wouldn\\'t know about sleeping sitting up in a hospital room for two months holding her hand and not leaving because the doctors could see in your eyes that the term \"visiting hours\" didn\\'t apply to you. And you wouldn\\'t know about real loss, because that only occurs when you lose something you love more than yourself, and you\\'ve never dared to love anything that much. I look at you and I don\\'t see an intelligent confident man, I don\\'t see a peer, and I don\\'t see my equal. I see a boy. Nobody could possibly understand you, right Will? Yet you presume to know so much about me because of a painting you saw. You must know everything about me. You\\'re an orphan, right?',\n",
       " ' You know, I was on this plane once. And I\\'m sittin\\' there and the captain comes on and is like \"we\\'ll be cruising at 35,000 feet,\" and does his thing, then he puts the mike down but forgets to turn it off. Then he says \"man, all I want right now is a blow-job and a cup of coffee.\" So the stewardess goes runnin\\' up towards the cock-pit to tell him the mike\\'s still on, and this guy in the back of the plane goes \"don\\'t forget the coffee!\"',\n",
       " \" You've never been on a plane.\",\n",
       " \" I know, but the joke's better if I tell it in the first person.\",\n",
       " ' Yeah? You got a lady now?',\n",
       " ' Yeah, I went on a date last week.',\n",
       " \" How'd it go?\",\n",
       " ' Fine.',\n",
       " ' Well, are you going out again?',\n",
       " \" I don't know.\",\n",
       " ' Why not?',\n",
       " \" Haven't called her.\",\n",
       " ' Jesus Christ, you are an amateur.',\n",
       " \" I know what I'm doing. She's different from the other girls I met. We have a really good time. She's smart, beautiful, fun...\",\n",
       " ' So Christ, call her up.',\n",
       " \" Why? So I can realize she's not so smart. That she's boring. You don't get it. Right now she's perfect, I don't want to ruin that.\",\n",
       " \" And right now you're perfect too. Maybe you don't want to ruin that.\",\n",
       " \" I teach this shit, I didn't say I knew how to do it.\",\n",
       " \" You ever think about gettin' remarried?\",\n",
       " \" My wife's dead.\",\n",
       " ' Hence, the word remarried.',\n",
       " \" My wife's dead.\",\n",
       " \" Well I think that's a wonderful philosophy, Sean. That way you can go through the rest of your life without having to really know anyone.\",\n",
       " \" Really? How'd the date go? WILL Do you still counsel veterans?  I read your book last night.\",\n",
       " \" No, I don't.\",\n",
       " ' Why not?',\n",
       " ' I gave that up when my wife got sick.',\n",
       " \" Is that why you didn't write anything else?\",\n",
       " \" I didn't write anything else 'cause nobody, including most of my colleagues bothered to read the first one.\",\n",
       " \" Well, I've read you colleagues. Your book was good, Sean.  All those guys were in your platoon?\",\n",
       " ' Yeah.',\n",
       " ' What happened to that guy from Kentucky?',\n",
       " ' Lon? He got married. He has a kid. I kind of lost touch with him after Nancy got sick.',\n",
       " ' Do you ever wonder what your life would be like if you never met your wife?',\n",
       " \" What? Do I wonder if I'd be better off if I never met my wife?\",\n",
       " \" You don't regret meetin' your wife?\",\n",
       " \" Why? Because of the pain I feel now? I have regrets Will, but I don't regret a singel day I spent with her.\",\n",
       " ' When did you know she was the one?',\n",
       " \" October 21, 1975. Game six of the World Series. Biggest game in Red Sox history, Me and my friends slept out on the sidewalk all night to get tickets. We were sitting in a bar waiting for the game to start and in walks this girl. What a game that was. Tie game in the bottom of the tenth inning, in steps Carlton Fisk, hit a long fly ball down the left field line. Thirty-five thousand fans on their feet, screamin' at the ball to stay fair. Fisk is runnin' up the baseline, wavin' at the ball like a madman. It hits the foul pole, home run. Thirty-five thousand people went crazy. And I wasn't one of them.\",\n",
       " ' Where were you?',\n",
       " \" I was havin' a drink with my future wife.\",\n",
       " \" You missed Pudge Fisk's homerun to have a drink with a woman you had never met?\",\n",
       " \" That's right.\",\n",
       " \" So wait a minute. The Red Sox haven't won a World Series since nineteen eighteen, you slept out for tickets, games gonna start in twenty minutes, in walks a girl you never seen before, and you give your ticket away?\",\n",
       " ' You should have seen this girl. She lit up the room.',\n",
       " \" I don't care if Helen of Troy walked into that bar! That's game six of the World Series!\",\n",
       " ' I just slid my ticket across the table and said \"sorry fellas, I gotta go see about a girl.\"',\n",
       " ' \"I gotta go see about a girl\"? What did they say?',\n",
       " ' They could see that I meant it.',\n",
       " \" You're kiddin' me.\",\n",
       " \" No Will, I'm not kiddin' you. If I had gone to see that game I'd be in here talkin' abouta girl I saw at a bar twenty years ago. And how I always regretted not goin' over there and talkin' to her. I don't regret the eighteen years we were married. I don't regret givin' up couseling for six years when she got sick. I don't regret being by her side for the last two years when things got real bad. And I sure as Hell don't regret missing that damn game.\",\n",
       " ' Would have been nice to catch that game though.',\n",
       " \" Well hell, I didn't know Pudge was gonna hit the home run.\",\n",
       " ' So you might be working for Uncle Sam.',\n",
       " \" I don't know.\",\n",
       " ' Gerry says the meeting went well.',\n",
       " ' I guess.',\n",
       " ' What did you think?',\n",
       " ' What did I think?',\n",
       " \" Do you think you're alone?\",\n",
       " ' What?',\n",
       " ' Do you have a soul-mate?',\n",
       " ' Define that.',\n",
       " ' Someone who challenges you in every way. Who takes you places, opens things up for you. A soul-mate.',\n",
       " ' Yeah.',\n",
       " \" They're all dead.\",\n",
       " \" Not to me, they're not.\",\n",
       " \" But you can't give back to them, Will.\",\n",
       " ' Not without a heater and some serious smelling salts, no...',\n",
       " \" That's what I'm saying, Will. You'll never have that kind of relationship in a world where you're afraid to take the first step because all you're seeing are the negative things that might happen ten miles down the road.\",\n",
       " \" Oh, what? You're going to take the professor's side on this?\",\n",
       " \" Don't give me you line of shit.\",\n",
       " \" I didn't want the job.\",\n",
       " \" It's not about that job. I'm not saying you should work for the government. But, you could do anything you want. And there are people who work their whole lives layin' brick so their kids have a chance at the kind of opportunity you have. What do you want to do?\",\n",
       " \" I didn't ask for this.\",\n",
       " \" Nobody gets what they ask for, Will. That's a cop-out.\",\n",
       " \" Why is it a cop-out? I don't see anythin' wrong with layin' brick, that's somebody's home I'm buildin'. Or fixin' somebody's car, somebody's gonna get to work the next day 'cause of me. There's honor in that.\",\n",
       " \" You're right, Will. Any man who takes a forty minute train ride so those college kids can come in in the morning and their floors will be clean and their trash cans will be empty is an honorable man.\",\n",
       " ' What?',\n",
       " \" If you won't answer my questions, you're wasting my time.\",\n",
       " ' What?',\n",
       " ' I been there. I played my hand.',\n",
       " \" That's right. And you fuckin' lost! And some people would have the sack to lose a big hand like that and still come back and ante up again!\",\n",
       " ' Look at me. What do you want to do?',\n",
       " \" Well, I'm here.  So, is that my problem? I'm afraid of being abandoned? That was easy.\",\n",
       " \" Look, a lot of that stuff goes back a long way.  And it's between me and him and it has nothing to do with you.\",\n",
       " ' Do you want to talk about it?',\n",
       " ' Oh, this is your file. I have to send it back to the Judge with my evaluation.',\n",
       " \" You're not going to fail me are you?\",\n",
       " ' You want to read it?',\n",
       " ' No.  Have you had any experience with that?',\n",
       " ' Twenty years of counselling you see a lot of--',\n",
       " ' --No, have you had any experience with that?',\n",
       " ' Yes.',\n",
       " \" It sure ain't good.\",\n",
       " ' Gotta go with the belt there...',\n",
       " ' I used to go with the wrench.',\n",
       " ' The wrench, why?',\n",
       " \" Cause fuck him, that's why.\",\n",
       " ' Oh, I know.',\n",
       " \" It's not your fault.\",\n",
       " ' I know.',\n",
       " \" It's not your fault.\",\n",
       " ' I know.',\n",
       " \" It's not your fault.\",\n",
       " ' I know.',\n",
       " \" It's not your fault.\",\n",
       " \" Don't fuck with me.\",\n",
       " \" It's not your fault.\",\n",
       " ' I know.',\n",
       " \" It's not...\",\n",
       " ' I know, I know...',\n",
       " ' Which one did you take, Will?',\n",
       " \" Over at Tri-tech. One of the jobs Professor Lambeau set me up with. I haven't told him yet, but I talked to my new boss over there and he seemed like a nice guy.\",\n",
       " \" That's what you want?\",\n",
       " ' Yeah, I think so.',\n",
       " ' Good for you. Congratulations.',\n",
       " \" Thanks you.  So, that's it? We're done?\",\n",
       " \" We're done. You did your time. You're a free man.\",\n",
       " ' I just want you to know, Sean...',\n",
       " \" You're Welcome, Will.\",\n",
       " \" I'll keep in touch.\",\n",
       " \" I'm gonna travel a little bit, so I don't know where I'll be.\",\n",
       " ' No. Thank you.',\n",
       " ' Does this violate the patient/doctor relationship?',\n",
       " ' Only if you grab my ass.',\n",
       " ' See ya.',\n",
       " ' Good luck.',\n",
       " ' You suck.',\n",
       " ' What?',\n",
       " \" I've been sitting over there for forty- five minutes waiting for you to come talk to me. But I'm just tired now and I have to go home and I wasn't going to keep sitting there waiting for you.\",\n",
       " \" I'm Will.\",\n",
       " \" Skylar. And by the way. That guy over there is a real dick and I just wanted you to know he didn't come with us.\",\n",
       " ' I kind of got that impression.',\n",
       " \" Well, look, I have to go. Gotta' get up early and waste some more money on my overpriced education.\",\n",
       " \" I didn't mean you. Listen, maybe...\",\n",
       " \" Here's my number.\",\n",
       " ' Great, or maybe we could go somewhere and just eat a bunch of caramels.',\n",
       " ' What?',\n",
       " \" When you think about it, it's just as arbitrary as drinking coffee.\",\n",
       " ' Okay, sounds good.',\n",
       " ' Five minutes.',\n",
       " ' What?',\n",
       " ' I was trying to be smooth.  But at twelve-fifteen I was gonna come over there and talk to you.',\n",
       " \" See, it's my life story. Five more minutes and I would have got to hear your best pick-up line.\",\n",
       " ' The caramel thing is my pick-up line.',\n",
       " ' Yeah?',\n",
       " \" It's Will, the really funny good looking guy you met at the bar?\",\n",
       " \" I'm sorry, I don't recall meeting anyone who fits that description.\",\n",
       " \" Okay, you got me. It's the ugly, obnoxious, toothless loser who got drunk and wouldn't leave you alone all night.\",\n",
       " \" Oh Will! I was wondering when you'd call.\",\n",
       " ' Yeah, I figured maybe sometime this week we could go to a cafe and have some caramels.',\n",
       " ' Sounds good, where are you now?',\n",
       " \" You aren't, by any chance, Pre-law? Are you?\",\n",
       " \" I don't know, it was just kind of the boring suburban thing. Private school, Harvard, and now Med. School.  I actually figured out that at the end of it, my brain will be worth a quarter of a million dollars. I shouldn't have told you that...\",\n",
       " ' I bet your parents were happy to pay.',\n",
       " ' I was happy to pay. I inherited the money.',\n",
       " \" Is Harvard gettin' all that money?\",\n",
       " \" Stanford. I'm leaving in June after I graduate.\",\n",
       " ' So you just want to use me and go?',\n",
       " \" Well, I'm gonna experiment on you for my anatomy class, then go.\",\n",
       " ' In that case, fine.  Want to see my magic trick?',\n",
       " ' Sure.',\n",
       " \" Now, I'm gonna make all these caramels disappear.\",\n",
       " ' Okay...',\n",
       " ' Have you ever seen Annie Hall?',\n",
       " ' No.',\n",
       " \" Well, there's this part of the movie that's about how there's always this tension on a first date where both people are thinking about what's going to happen with the whole 'good night kiss' thing.\",\n",
       " \" I really don't 'date' that much.\",\n",
       " \" You know what I mean. I know you've at least thought about it.\",\n",
       " \" No I haven't...\",\n",
       " ' Yes you have. You were thinking you were gonna get a good night kiss.',\n",
       " \" No I wasn't...\",\n",
       " ' Yes you were.',\n",
       " ' I was kinda\\' hopin\\' to get a \"good night laid\" but...I\\'ll take a kiss.',\n",
       " ' Oh, you will?',\n",
       " ' No...I was hoping to get a kiss.',\n",
       " \" Then why don't we just get it out of the way.\",\n",
       " ' Free?',\n",
       " ' Hey, I spent all my money on those caramels.',\n",
       " ' You grew up around here?',\n",
       " ' Not far from here, South Boston.',\n",
       " ' How was that?',\n",
       " ' Pretty boring, I guess.',\n",
       " ' I bet you have a great family.',\n",
       " ' You know, nothing special.',\n",
       " ' You have a lot of brothers and sisters?',\n",
       " ' Do I have a lot of brothers and sisters?',\n",
       " ' Yeah.',\n",
       " ' Well, Irish Catholic. What do you think?',\n",
       " ' How many?',\n",
       " \" You wouldn't believe me if I told you.\",\n",
       " ' What, five?',\n",
       " ' I have twelve big brothers.',\n",
       " ' Not a chance.',\n",
       " \" Yup, you're lookin' at lucky thirteen.\",\n",
       " ' Bullshit.',\n",
       " ' I swear to God.',\n",
       " ' Your house must have been a zoo.',\n",
       " ' It was great. There was always someone to play with, give you advice.',\n",
       " ' Do you know all their names?',\n",
       " \" 'Course I do, they're my brothers.\",\n",
       " ' Well...',\n",
       " ' Marky, Ricky, Danny, Terry, Mikey, Davey, Timmy, Tommy, Joey, Robby, Johnny, and Brian.',\n",
       " ' Do you keep in touch with them?',\n",
       " ' All the time. We all live in Southie. I live with three of them now.',\n",
       " ' I want to meet them.',\n",
       " \" We'll do that.\",\n",
       " ' Where have you been?',\n",
       " \" I'm sorry, I been real busy.\",\n",
       " ' You were busy? You know, I really was waiting for you to call me.',\n",
       " \" Sorry. I'm sorry. Give me another crack at it. Let me take you out.\",\n",
       " ' You should have called. I have an \"O- chem\" lab due tomorrow and it\\'s impossible.  It\\'s not an excuse dummy. I want to go out with you. But look:',\n",
       " ' Promise?',\n",
       " ' If you bring the caramels.',\n",
       " \" I couldn't wait till tomorrow.\",\n",
       " ' How the hell did you do that?',\n",
       " \" Didn't your mother ever tell you not to look a gift horse n the mouth?\",\n",
       " \" I'm supposed to understand this.\",\n",
       " \" You're not going into surgery tomorrow are you?\",\n",
       " ' No.',\n",
       " \" Then let's go have some fun.\",\n",
       " ' Why do we always stay here?',\n",
       " \" 'Cause it's nicer than my place.\",\n",
       " \" I've never seen your place.\",\n",
       " ' Exactly.',\n",
       " ' What about your friends? Or your brothers? When do I get to meet them?',\n",
       " \" They don't come over here that much.\",\n",
       " ' I think I can make it to South Boston.',\n",
       " \" Aah, it's kind of a hike.\",\n",
       " \" Is it me you're hiding from them or the other way around?\",\n",
       " \" All right, all right. We'll go.\",\n",
       " ' When?',\n",
       " \" Sometime. I don't know. Next week.\",\n",
       " \" What if I said I wouldn't sleep with you again until you let me meet your friends?\",\n",
       " \" I'd say...  It's only four in the mornin', they're prob'ly up.\",\n",
       " \" You men are shameful. If you're not thinking of your weiner then you're acting on its behalf.\",\n",
       " \" Then on behalf of my weiner, I'd like to ask for an advance.\",\n",
       " \" I thought you said you'd show me your place.\",\n",
       " ' Not tonight.',\n",
       " \" How's it goin'?\",\n",
       " ' Fine.',\n",
       " ' Want me to take a look?',\n",
       " ' No.',\n",
       " \" C'mon, give me a peek and we'll go to the battin' cages.\",\n",
       " \" It's important that I learn this.\",\n",
       " \" Why is it important to you? If I inherited all that money, the only thing important to me would be workin' on my swing.\",\n",
       " ' Clearly.',\n",
       " \" You're rich. What do you have to worry about?\",\n",
       " \" Rich? I have an inheritance. It's two handred and fifty thousand dollars. That's exactly what it'll cost me, minus about five hundred bucks, to go all the way through med school. This is what I'm doing with that money. I could have done anything I wanted. I could have expanded my wardrobe, substantially.\",\n",
       " \" Instead you're going to bust your ass for five years so you can be broke? SKYLAR No, so I can be a doctor.\",\n",
       " ' All right, Mr. Nosey Parker. Let me ask you a question? Do you have a photographic memory?',\n",
       " \" I guess. I don't know. How do you remember your phone number?\",\n",
       " ' Have you ever studied Organic Chemistry?',\n",
       " ' Some, a little.',\n",
       " ' Just for fun?',\n",
       " ' I guess so.',\n",
       " ' Nobody does organic chemistry for \"fun.\" It\\'s unnecessary. Especially for someone like you.',\n",
       " ' Like me?',\n",
       " ' Yeah. Someone like you who divides his time, fairly evenly, between the batting cages and bars.',\n",
       " ' Do you play the piano?',\n",
       " ' Come one Will. I just want to know.',\n",
       " \" I'm trying to explain it to you. So you play the piano. When you look at the keys, you see music, you see Mozart.\",\n",
       " ' I see \"Hot Cross Buns,\" but okay.',\n",
       " \" Well all right, Beethoven. He looked at a piano and saw music. The fuckin' guy was deaf when he composed the Ode to Joy. They had to turn him around to take a bow because he couldn't hear the crowd going crazy behind him. Stone deaf. He saw all of that music in his head.\",\n",
       " ' So, do you play the piano?',\n",
       " \" Not a lick. I look at a piano and I see black and white keys, three pedals and a box of wood. Beethoven, Mozart, they looked at it and it just made sense to them. They saw a piano and they could play. I couldn't paint you a picture, I probably can't hit the ball out of Fenway Park and I can't play the piano--\",\n",
       " ' --But you can do my O-chem lab in under an hour, you can--',\n",
       " ' --When it came to stuff like that I could always just play.',\n",
       " ' Will? Are you awake?',\n",
       " ' No.',\n",
       " ' Come with me to California.',\n",
       " ' What?',\n",
       " ' I want you to come with me.',\n",
       " ' How do you know that?',\n",
       " ' I know. I just do.',\n",
       " ' Yeah, but how do you know?',\n",
       " \" I don't know. I just feel it.\",\n",
       " \" And you're sure about that?\",\n",
       " \" Yeah, I'm sure.\",\n",
       " ' \\'Cause that\\'s a serious thing you\\'re sayin\\'. I mean, we might be in California next week and you could find out somethin\\' about me that you don\\'t like. And you might feel like \"hey this is a big mistake.\"  But you can\\'t take it back, \\'cause you know it\\'s real serious and you can\\'t take somethin\\' like that back. Now I\\'m in California, \\'cause you asked me to come. But you don\\'t really want me there. And I\\'m stuck in California with someone who really doesn\\'t want me there and just wishes they had a take-back.',\n",
       " ' \"Take-back?\" What is that? I don\\'t want a take-back. I want you to come to California with me.',\n",
       " \" I can't go out to California.\",\n",
       " ' Why not?',\n",
       " ' One, because I have a job here and two because I live here--',\n",
       " \" Look, Will if you're not in love with me, you can say that.\",\n",
       " \" I'm not sayin' I'm not in love with you.\",\n",
       " ' Then what are you afraid of?',\n",
       " ' What do you mean \"What am I afraid of?\"',\n",
       " \" Why won't you come with me? What are you so scared of?\",\n",
       " ' What am I scared of?',\n",
       " \" Well, what aren't you scared of? You live in your safe little world where nobody challenges you and you're scared shitless to do anything else--\",\n",
       " \" --Don't tell me about my world. You're the one that's afraid. You just want to have your little fling with the guy from the other side of town and marry--\",\n",
       " ' Is that what you think--',\n",
       " \" --some prick from Stanford that your parents will approve of. Then you'll sit around with the rest of the upper crust kids and talk about how you went slummin' too.\",\n",
       " ' I inherited that money when I was thirteen, when my father died.',\n",
       " ' At least you have a mother.',\n",
       " \" Fuck you! You think I want this? That money's a burden to me. Every day I wake up and I wish I could give that back. I'd give everything I have back to spend one more day with my father. But that's life. And I deal with it. So don't put that shit on me. You're the one that's afraid.\",\n",
       " ' What the fuck am I afraid of?!',\n",
       " \" You're afraid of me. You're afraid that I won't love you back. And guess what? I'm afraid too. But at least I have the balls to it give it a shot. At least I'm honest with you.\",\n",
       " \" I'm not honest?\",\n",
       " ' What about your twelve brothers?',\n",
       " \" Oh, is that what this is about? You want to hear that I don't really have any brothers? That I'm a fuckin' orphan? Is that what you want to hear?\",\n",
       " \" Yes, Will. I didn't even know that?\",\n",
       " \" No, you don't want to hear that.\",\n",
       " ' Yes, I do, Will.',\n",
       " \" You don't want to hear that I got cigarettes put out on me when I was a little kid. That this isn't surgery\",\n",
       " \" Yes I do. Did you ever think that maybe I could help you? That maybe that's the point, that we're a team?\",\n",
       " ' What, you want to come in here and save me? Is that what you want to do? Do I have a sign that says \"save me\" on my back?',\n",
       " ' I don\\'t want to \"save\" you. I just want to be with you. I love you. I love you!',\n",
       " \" Don't bullshit me! Don't fuckin' bullshit me!\",\n",
       " \" You know what I want to hear? I want to hear that you don't love me. If you tell me that, then I'll leave you alone. I won't ask any questions and I won't be in your life.\",\n",
       " \" I just wanted to call before you left.  I'm takin' all these job interviews. So I won't just be a construction worker.\",\n",
       " ' I never cared about that.',\n",
       " ' Yeah.',\n",
       " ' I love you, Will.  No take-backs.',\n",
       " ' Take care.',\n",
       " ' Goodbye.']"
      ]
     },
     "execution_count": 277,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "will_utterances"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 278,
   "id": "27057ce3",
   "metadata": {},
   "outputs": [],
   "source": [
    "for index in range(0, len(will_utterances)): \n",
    "    utterance_to_predict = preprocess_data(will_utterances[index])\n",
    "    input_ids, att_masks = process_data([utterance_to_predict])\n",
    "    output = new_model(input_ids = input_ids, attention_mask=att_masks)\n",
    "    prediction = np.argmax(output.logits.cpu().detach().numpy(),axis=-1)\n",
    "    confidence = torch.max(softmax(output.logits, dim=1))\n",
    "    \n",
    "    if confidence > 0.70:\n",
    "        will_utterances[index] = emotions_dictionary_inverted[prediction[0]]\n",
    "    else:\n",
    "        will_utterances[index] = \"NEUTRAL\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 280,
   "id": "a546913c",
   "metadata": {},
   "outputs": [],
   "source": [
    "will_utterances = [x for x in will_utterances if x != 'NEUTRAL']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 284,
   "id": "27aa3926",
   "metadata": {},
   "outputs": [],
   "source": [
    "will_utterance_df = pandas.DataFrame(will_utterances, columns=['emotion'])\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 285,
   "id": "c02f58cb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>emotion</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>anger</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>anger</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>surprise</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>anger</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>anger</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>298</th>\n",
       "      <td>surprise</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>299</th>\n",
       "      <td>anger</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>300</th>\n",
       "      <td>sadness</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>301</th>\n",
       "      <td>joy</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>302</th>\n",
       "      <td>sadness</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>303 rows Ã— 1 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      emotion\n",
       "0       anger\n",
       "1       anger\n",
       "2    surprise\n",
       "3       anger\n",
       "4       anger\n",
       "..        ...\n",
       "298  surprise\n",
       "299     anger\n",
       "300   sadness\n",
       "301       joy\n",
       "302   sadness\n",
       "\n",
       "[303 rows x 1 columns]"
      ]
     },
     "execution_count": 285,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "will_utterances"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 287,
   "id": "5c584a3d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "([<matplotlib.patches.Wedge at 0x7f89581b5760>,\n",
       "  <matplotlib.patches.Wedge at 0x7f89cc0f6160>,\n",
       "  <matplotlib.patches.Wedge at 0x7f89b3ab51f0>,\n",
       "  <matplotlib.patches.Wedge at 0x7f89b3ab0640>],\n",
       " [Text(0.061993448660020434, 1.098251707179751, 'Anger'),\n",
       "  Text(-0.6678787246083696, -0.8740354736596782, 'Surprise'),\n",
       "  Text(0.76199684551999, -0.7933226376560704, 'Joy'),\n",
       "  Text(1.0759623797217406, -0.22870277091353572, 'Sadness')],\n",
       " [Text(0.03381460836001114, 0.5990463857344096, '48.2%'),\n",
       "  Text(-0.3642974861500197, -0.476746621996188, '32.8%'),\n",
       "  Text(0.4156346430109036, -0.4327214387214929, '12.3%'),\n",
       "  Text(0.5868885707573129, -0.12474696595283766, '6.7%')])"
      ]
     },
     "execution_count": 287,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "labels = 'Anger', 'Surprise', 'Joy', 'Sadness'\n",
    "sizes = (will_utterance_df.value_counts().tolist())[1:]\n",
    "fig, ax = plt.subplots()\n",
    "ax.pie(sizes, labels=labels, autopct='%1.1f%%')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "09d9ade6",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "PROGETTO",
   "language": "python",
   "name": "progetto"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
